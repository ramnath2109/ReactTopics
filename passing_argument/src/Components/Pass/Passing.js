import React, { useState } from "react";
import Modal from "react-modal";
import img from "../../../src/Assets/1.png";
import './Passstyle.css'
const Passing = () => {
  const [modalIsOpen, setModalIsOpen] = useState(false);

  const handleClick = (event, customData) => {
    // Open the modal
    setModalIsOpen(true);

    // Access the event object if needed
    console.log("Button clicked!", event);

    // Access the custom data passed to the event handler
    console.log("Custom data:", customData);
  };

  return (
    
      <div className="container">
        <div className="heading">
          <h1>Passing Event Arguments</h1>
        </div>
        <hr></hr>
        <h1>Understanding Event Handling in React:</h1>
        <h3>
          In React, event handling is similar to handling events in vanilla
          JavaScript, but with a few differences due to React's synthetic event
          system. When an event, like a button click or form submission, occurs
          in a React application, React wraps the native browser event with its
          own synthetic event object. This synthetic event object is passed to
          the event handler function.
        </h3>
        <h1>Event Handler Function:</h1>
        <h3>
          An event handler function is a function that gets executed when a
          specific event occurs, such as a button click. In React, event handler
          functions are typically defined inline within JSX or as methods of a
          class component.
        </h3>
        <h1> Passing Additional Data to Event Handlers:</h1>
        <h3>
          Sometimes, you may need to pass additional data to an event handler
          function along with the default event object. This additional data
          could be anything relevant to the event or the action you want to
          perform. React allows you to pass this data through the event
          handler's parameters.
        </h3>
        <h1>Example with Button Component:</h1>
        <h4>Let's break down the example code provided earlier:</h4>
        <img src={img} alt="" />
        <h4>Explanation:</h4>
        <ul>
            <h3>
          <li>We define a functional component named ButtonComponent.</li>
          <li>
            Inside this component, we define a function named handleClick which
            takes two parameters: event and customData.
          </li>
          <li>
            When the button is clicked, the onClick event handler is triggered.
            We pass two arguments to this event handler:
          </li>
          <li>
            (e): The synthetic event object generated by React when the button
            is clicked.
          </li>
          <li>
            "Hello World": Custom data that we want to pass to the event
            handler.
          </li>
          <li>
            Inside the event handler (handleClick function), we can access both
            the event object (event) and the custom data (customData). We log
            them to the console for demonstration purposes, but you can perform
            any action you need based on this data.
          </li>
          </h3>
          </ul>
          <p>
            By passing additional data to event handlers in React, you can make
            your event handling logic more flexible and powerful, enabling you
            to respond to events in a variety of ways based on the context and
            requirements of your application.
          </p>
        
        <div className="btn"> 
        <button onClick={(e) => handleClick(e, "Hello World")}>Click Me</button>
        <Modal
          isOpen={modalIsOpen}
          onRequestClose={() => setModalIsOpen(false)}
        >
          <h2>Passing Content</h2>
          <p>This is the Passing Argument</p>
          <button onClick={() => setModalIsOpen(false)}>Close Modal</button>
        </Modal>
        </div>
      </div>

  );
};

export default Passing;
